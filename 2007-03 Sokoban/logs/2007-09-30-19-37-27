[8 4]
[8 5]
[8 6]
[8 7]
[7 7]
[9 7]
[6 7]
[9 8]
[10 7]
[9 9]
[11 7]
[8 9]
[12 7]
[7 9]
[13 7]
[6 9]
[14 7]
[5 9]
[14 8]
[15 7]
[14 6]
[5 8]
[15 8]
[16 7]
[15 6]
[16 8]
[17 7]
[16 6]
[17 8]
[17 6]
[1 1]
[1 2]
[2 1]
[1 3]
[2 2]
[3 1]
[1 4]
[2 3]
[3 2]
[4 1]
[1 5]
[2 4]
[3 3]
[4 2]
[2 5]
[3 4]
[4 3]
[3 5]
[4 4]
[4 5]
[5 4]
[6 4]
[6 5]
[7 4]
[6 6]
[8 4]
[6 7]
[8 5]
[5 7]
[6 8]
[9 5]
[5 8]
[4 8]
[3 8]
[3 7]
loading time: 889ms
[8 4]
[8 5]
[8 6]
[8 7]
[7 7]
[9 7]
[6 7]
[9 8]
[10 7]
[9 9]
[11 7]
[8 9]
[12 7]
[7 9]
[13 7]
[6 9]
[14 7]
[5 9]
[14 8]
[15 7]
[14 6]
[5 8]
[15 8]
[16 7]
[15 6]
[16 8]
[17 7]
[16 6]
[17 8]
[17 6]
there are 41 nondead cells and 6 boxes, maximum of 4496388 keys!
#: time=414ms keys=99 k/s=239 c/k=42 branch=4.7(4.7) deadlocks[fast2x2=62 frozenBoxes=14]157% queue=313(1000)1% set=413(1024)1% queue/set=76% deadlock/set=0.18 memFree=4015k
solution in 97 pushes!
